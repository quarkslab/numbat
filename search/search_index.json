{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Numbat","text":"<p>Numbat is an API to create and manipulate Sourcetrail databases. Sourcetrail is a code source explorer which allows users to navigate through the different components (functions, classes, types, etc.) easily.</p> <p>Numbat main goal is to offer a full-python SDK given the fact that the current one, SourcetrailDB cannot be used anymore efficiently. It is not user-friendly at first sight, need to be compiled to provide Python bindings and, moreover, it is no longer maintained. Finally, we have added some little new features as finding an element in the database.</p> <p>With Numbat, you will be able to visualize your data quickly with the nice graphical Sourcetrail interface. For example, Pyrrha uses Numbat to map firmware structure.</p>"},{"location":"#installation","title":"Installation","text":"<p>Numbat is available on <code>pypi</code>. <pre><code>pip install numbat\n</code></pre></p>"},{"location":"#from-sources","title":"From sources","text":"<p>You can also install it from the <code>git</code> repository. Either using the following oneliner: <pre><code>pip install 'numbat @ git+https://github.com/quarkslab/numbat'\n</code></pre> or doing it in few steps: <pre><code># Download the repo\ngit clone git@github.com:quarkslab/numbat.git\ncd numbat\n# Install numbat locally\npip install .\n</code></pre></p>"},{"location":"#build-documentation","title":"Build Documentation","text":"<p>If you want to build the documentation by first installing Numbat with the required <code>[doc]</code> dependencies and then serve the documentation on a local server.</p> <pre><code># if you already have a local clone of the project\ncd NUMBAT_DIR\npip install .[doc]\n\n# otherwise\npip install 'numbat[doc]'\n\n# serve doc locally\nmkdocs serve\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<p>A complete usage with examples is available in the documentation but here is a quick usage to begin with Numbat.</p> <p>To use Numbat, you must first create a <code>SourcetrailDB</code> object and either create a new database or open an existing one:</p> <pre><code>from pathlib import Path\nfrom numbat import SourcetrailDB\n\n# Create DB\ndb = SourcetrailDB.open(Path('my_db'), clear=True)\n\n# Create a first class containing the method 'main'\nmy_main = db.record_class(name=\"MyMainClass\")\nmeth_id = db.record_method(name=\"main\", parent_id=my_main)\n\n# Create a second class with a public field 'first_name'\nclass_id = db.record_class(name=\"PersonalInfo\")\nfield_id = db.record_field(name=\"first_name\", parent_id=class_id)\n\n# The method 'main' is using the 'first_name' field\ndb.record_ref_usage(meth_id, field_id)\n\n# Save modifications and close the DB\ndb.commit()\ndb.close()\n</code></pre>"},{"location":"#authors-maintainers","title":"Authors &amp; Maintainers","text":""},{"location":"#current","title":"Current","text":"<ul> <li>Sami Babigeon (@sbabigeon), Quarkslab</li> <li>Elo\u00efse Brocas (@ebrocas), Quarkslab</li> </ul>"},{"location":"#past","title":"Past","text":"<ul> <li>Pascal Wu (@pwu42), during his internship at Quarkslab</li> </ul> <p>The logo is a creation of Beno\u00eet Forgette and Sami Babigeon.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v022graph-customization-features","title":"v0.2.2\u2014Graph Customization Features","text":""},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Class member publicity (internal, private, public) could now be set with the <code>SourcetrailDB.record_{public, default, private}_access</code> methods.</li> <li>Integrate customization features provided by NumbatUI (cf dedicated doc page for details).</li> </ul>"},{"location":"changelog/#fixes","title":"Fixes","text":"<ul> <li>Update CI to replace EoL actions versions.</li> <li>Parent directory iteration</li> </ul> <p>Full Changelog: https://github.com/quarkslab/numbat/compare/v0.2.1...v0.2.2</p>"},{"location":"changelog/#v021opensourcing","title":"v0.2.1\u2014Opensourcing","text":""},{"location":"changelog/#features_1","title":"Features","text":"<ul> <li>add small details in the documentation.</li> </ul>"},{"location":"changelog/#fixes_1","title":"Fixes","text":"<ul> <li>Tests with correct modules name</li> </ul> <p>Full Changelog: https://github.com/quarkslab/numbat/compare/v0.2.0...v0.2.1</p>"},{"location":"changelog/#v020","title":"v0.2.0","text":""},{"location":"changelog/#features_2","title":"Features","text":"<ul> <li>add a cache system for names/id to avoid doing DB request to obtain the id associated to a given name</li> <li>add the classmethod <code>SourcetrailDB.exists</code> to check if a path correspond to an existing db</li> </ul>"},{"location":"changelog/#fixes_2","title":"Fixes","text":"<ul> <li>None</li> </ul> <p>Full Changelog: https://github.com/quarkslab/numbat/compare/v0.1.0...v0.2.0</p>"},{"location":"changelog/#v010first-release","title":"v0.1.0\u2014First release","text":"<p>Full Changelog: https://github.com/quarkslab/numbat/commits/v0.1.0</p>"},{"location":"customization/","title":"Customization","text":"<p>Numbat also offers a few customization options, mostly to help with mapping data other than source code.</p> <p>Warning</p> <p>These features can only be viewable with NumbatUI, Quarkslab fork of Sourcetrail, which is currently work in progress and really unstable. </p>"},{"location":"customization/#custom-node-types","title":"Custom node types","text":"<p>Non-source code data might not fit in any of the existing node types, so we can use the <code>set_node_type</code> function to change them to types that are more adapted.</p> <p>The existing node types are: <code>annotation</code> <code>built-in type</code> <code>class</code> <code>enum</code> <code>enum constant</code> <code>field</code> <code>file</code> <code>function</code> <code>global variable</code> <code>interface</code> <code>macro</code> <code>method</code> <code>module</code> <code>namespace</code> <code>package</code> <code>struct</code> <code>symbol</code> <code>type</code> <code>type parameter</code> <code>typedef</code> <code>union</code></p> <p>Here, for example, the <code>typedef</code> node type is changed to <code>symlink</code> and <code>Symlinks</code> will be displayed in the overview instead of <code>Typedefs</code>.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# add nodes, edges, etc...\n\n# change node types\ndb.set_node_type(\"class\", \"Binaries\", \"binary\")\ndb.set_node_type(\"typedef\", \"Symlinks\", \"symlink\")\n\ndb.commit()\ndb.close()\n</code></pre> <p></p> <p> </p> Modified node types, in the overview and the tooltip"},{"location":"customization/#node-edge-colors","title":"Node / Edge colors","text":"<p>Nodes and edges (references) can also be recolored, using the <code>change_node_color</code> and the <code>change_edge_color</code> methods.</p> <p>These functions support hex codes and SVG 1.0 color keywords.</p> <p>For nodes, the body (fill), border, text, icon and hatching can be colored separately.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# record file\nfile_id = db.record_file(Path('file.py'))\ndb.record_file_language(file_id, 'python')\n\n# add nodes\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\", postfix=\"():\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n\n# add reference\nref_id = db.record_ref_usage(meth_id, field_id)\n\n# change colors\ndb.change_node_color(file_id, fill_color=\"#DEB887\", border_color=\"#B0C4DE\",\n    text_color=\"brown\", icon_color=\"brown\", hatching_color=\"#FFEBCD\")\ndb.change_edge_color(ref_id, \"green\")\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p> Recolored node <p> </p> Recolored edge"},{"location":"customization/#hover-menu-text","title":"Hover menu text","text":"<p>Additional metadata can be added in the tooltip when hovering over a node or edge, using the <code>hover_display</code> attribute on creation.</p> <p>This value replaces the original metadata.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# add nodes\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\", postfix=\"():\",\n    hover_display=\"example class used for demonstration\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p> Additional data for a node"},{"location":"customization/#custom-commands","title":"Custom commands","text":"<p>We can also use the <code>set_custom_command</code> method to set a user-defined command for each node that can be executed in the node's context menu.</p> <p>A list is used for the command and its arguments, and a brief description can be provided separately. </p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# record file\nfile_id = db.record_file(Path('file.py'))\ndb.record_file_language(file_id, 'python')\n\n# add nodes\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\", postfix=\"():\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n\n# set command\ndb.set_custom_command(file_id, [\"open\", str(Path(\"file.py\").absolute())],\n    \"Open in external window\")\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p> Custom command at the bottom of the context menu"},{"location":"customization/#file-sideloading","title":"File sideloading","text":"<p>Finally, we can link a file to any node using the <code>associate_file_to_node</code> method. This makes it so that the full content of the file can be displayed when selecting the node, without storing the content directly in the database nor creating an additional node for the file.\\ The sideloaded file is stored in the <code>[project_name]_files/</code> directory next to the database.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# Add nodes\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\",\n                           postfix=\"():\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n\n# Sideload file\ndb.associate_file_to_node(class_id, Path(\"file.py\"), True)\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p> Sideloaded file on MyType"},{"location":"license/","title":"License","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"public_api/","title":"Public API","text":"<p><code>Numbat</code> provides a class <code>SourcetrailDB</code> created to be easily used by external projects to create Sourcetrail projects. It provides methods to:</p> <ul> <li>manage the database file;</li> <li>record symbols (according to their types);</li> <li>customize symbols;</li> <li>record references (links) between symbols;</li> <li>record a file and information related to the source code it contained.</li> </ul>"},{"location":"public_api/#numbat.SourcetrailDB","title":"numbat.SourcetrailDB","text":"<pre><code>SourcetrailDB(database, path, logger=None)\n</code></pre> <p>This class implement a wrapper to Sourcetrail internal database, it is able to create, edit and delete the underlying sqlite3 database used by Sourcetrail.</p>"},{"location":"public_api/#numbat.SourcetrailDB.exists","title":"exists  <code>classmethod</code>","text":"<pre><code>exists(path)\n</code></pre> <p>This method check if there is a Sourcetrail db with the given path. If the provided path does not end with the sourcetrail db correct suffix. It will be added.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path | str</code> <p>The path to test</p> required <p>Returns:</p> Type Description <code>bool</code> <p>a bool</p>"},{"location":"public_api/#numbat.SourcetrailDB.open","title":"open  <code>classmethod</code>","text":"<pre><code>open(path, clear=False)\n</code></pre> <p>This method allow to open an existing sourcetrail database</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path | str</code> <p>The path to the existing database</p> required <code>clear</code> <code>bool</code> <p>If set to True the database is cleared (Optional)</p> <code>False</code> <p>Returns:</p> Type Description <code>SourcetrailDB</code> <p>the SourcetrailDB object corresponding to the given DB</p>"},{"location":"public_api/#numbat.SourcetrailDB.create","title":"create  <code>classmethod</code>","text":"<pre><code>create(path)\n</code></pre> <p>This method allow to create a sourcetrail database</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path | str</code> <p>The path to the new database</p> required <p>Returns:</p> Type Description <code>SourcetrailDB</code> <p>the SourcetrailDB object corresponding to the given DB path</p>"},{"location":"public_api/#numbat.SourcetrailDB.commit","title":"commit","text":"<pre><code>commit()\n</code></pre> <p>This method allow to commit changes made to a sourcetrail database. Any change made to the database using this API will be lost if not committed before closing the database.</p> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.clear","title":"clear","text":"<pre><code>clear()\n</code></pre> <p>Clear all elements present in the database.</p> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.close","title":"close","text":"<pre><code>close()\n</code></pre> <p>This method allow to close a sourcetrail database. The database must be closed after use in order to liberate memory and resources allocated for it.</p> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_symbol_node","title":"record_symbol_node","text":"<pre><code>record_symbol_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a \"SYMBOL\" symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_type_node","title":"record_type_node","text":"<pre><code>record_type_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a TYPE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_buitin_type_node","title":"record_buitin_type_node","text":"<pre><code>record_buitin_type_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a BUILTIN_TYPE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_module","title":"record_module","text":"<pre><code>record_module(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a MODULE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_namespace","title":"record_namespace","text":"<pre><code>record_namespace(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a NAMESPACE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_package","title":"record_package","text":"<pre><code>record_package(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a PACKAGE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_struct","title":"record_struct","text":"<pre><code>record_struct(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a STRUCT symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_class","title":"record_class","text":"<pre><code>record_class(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a CLASS symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_interface","title":"record_interface","text":"<pre><code>record_interface(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a INTERFACE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_annotation","title":"record_annotation","text":"<pre><code>record_annotation(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a ANNOTATION symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_global_variable","title":"record_global_variable","text":"<pre><code>record_global_variable(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a GLOBAL_VARIABLE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_field","title":"record_field","text":"<pre><code>record_field(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a FIELD symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_function","title":"record_function","text":"<pre><code>record_function(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a FUNCTION symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_method","title":"record_method","text":"<pre><code>record_method(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a METHOD symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_enum","title":"record_enum","text":"<pre><code>record_enum(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a ENUM symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_enum_constant","title":"record_enum_constant","text":"<pre><code>record_enum_constant(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a ENUM_CONSTANT symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_typedef_node","title":"record_typedef_node","text":"<pre><code>record_typedef_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a TYPEDEF symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_type_parameter_node","title":"record_type_parameter_node","text":"<pre><code>record_type_parameter_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a TYPE_PARAMETER symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_macro","title":"record_macro","text":"<pre><code>record_macro(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a MACRO symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_union","title":"record_union","text":"<pre><code>record_union(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a UNION symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_public_access","title":"record_public_access","text":"<pre><code>record_public_access(symbol_id)\n</code></pre> <p>Record the <code>public</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_private_access","title":"record_private_access","text":"<pre><code>record_private_access(symbol_id)\n</code></pre> <p>Record the <code>private</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_protected_access","title":"record_protected_access","text":"<pre><code>record_protected_access(symbol_id)\n</code></pre> <p>Record the <code>protected</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_default_access","title":"record_default_access","text":"<pre><code>record_default_access(symbol_id)\n</code></pre> <p>Record the <code>default</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_template_parameter_access","title":"record_template_parameter_access","text":"<pre><code>record_template_parameter_access(symbol_id)\n</code></pre> <p>Record the <code>template parameter</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_type_parameter_access","title":"record_type_parameter_access","text":"<pre><code>record_type_parameter_access(symbol_id)\n</code></pre> <p>Record the <code>type parameter</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.set_node_type","title":"set_node_type","text":"<pre><code>set_node_type(type_to_change, graph_display='', hover_display='')\n</code></pre> <p>Change the display text of a node type.</p> <p>Allowed values for node types: <code>annotation</code> <code>built-in type</code> <code>class</code> <code>enum</code> <code>enum constant</code> <code>field</code> <code>file</code> <code>function</code> <code>global variable</code> <code>interface</code> <code>macro</code> <code>method</code> <code>module</code> <code>namespace</code> <code>package</code> <code>struct</code> <code>symbol</code> <code>type</code> <code>type parameter</code> <code>typedef</code> <code>union</code></p> <p>Parameters:</p> Name Type Description Default <code>type_to_change</code> <code>str</code> <p>The node type to update</p> required <code>graph_display</code> <code>str</code> <p>The display text in the Sourcetrail graph</p> <code>''</code> <code>hover_display</code> <code>str</code> <p>The display text when hovering over a node</p> <code>''</code>"},{"location":"public_api/#numbat.SourcetrailDB.change_node_color","title":"change_node_color","text":"<pre><code>change_node_color(\n    node_id,\n    fill_color=\"default\",\n    border_color=\"default\",\n    text_color=\"default\",\n    icon_color=\"default\",\n    hatching_color=\"default\",\n)\n</code></pre> <p>Change the color of a node</p> <p>Supported values for colors: RGB hex code (e.g. #AABBCC), SVG color keyword</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>Id of the node to change</p> required <code>fill_color</code> <code>str</code> <p>Color of the node body</p> <code>'default'</code> <code>border_color</code> <code>str</code> <p>Color of the border</p> <code>'default'</code> <code>text_color</code> <code>str</code> <p>Color of the node text</p> <code>'default'</code> <code>icon_color</code> <code>str</code> <p>Color of the node icon (if applicable)</p> <code>'default'</code> <code>hatching_color</code> <code>str</code> <p>Color of the node hatching (if applicable)</p> <code>'default'</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.change_edge_color","title":"change_edge_color","text":"<pre><code>change_edge_color(edge_id, color)\n</code></pre> <p>Change the color of an edge</p> <p>Supported values for colors: RGB hex code (e.g. #AABBCC), SVG color keyword</p> <p>Parameters:</p> Name Type Description Default <code>edge_id</code> <code>int</code> <p>Id of the edge to change</p> required <code>color</code> <code>str</code> <p>RGB hex code or name of the edge's new color</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.set_custom_command","title":"set_custom_command","text":"<pre><code>set_custom_command(node_id, command, description)\n</code></pre> <p>Add a custom command to a node's context menu</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>Id of the node to add the custom command to</p> required <code>command</code> <code>list</code> <p>List containing the command to execute and its arguments</p> required <code>description</code> <code>str</code> <p>Description of the command</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.associate_file_to_node","title":"associate_file_to_node","text":"<pre><code>associate_file_to_node(node_id, file, display_content)\n</code></pre> <p>Copy a file to the project directory and link it to a node</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>Id of the node to link</p> required <code>file</code> <code>Path</code> <p>Path to the file to link</p> required <code>display_content</code> <code>bool</code> <p>Whether the file content should be displayed or not</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_member","title":"record_ref_member","text":"<pre><code>record_ref_member(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a member reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_type_usage","title":"record_ref_type_usage","text":"<pre><code>record_ref_type_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a TYPE_USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_usage","title":"record_ref_usage","text":"<pre><code>record_ref_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_call","title":"record_ref_call","text":"<pre><code>record_ref_call(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a CALL reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_inheritance","title":"record_ref_inheritance","text":"<pre><code>record_ref_inheritance(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an INHERITANCE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_override","title":"record_ref_override","text":"<pre><code>record_ref_override(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an OVERRIDE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_type_argument","title":"record_ref_type_argument","text":"<pre><code>record_ref_type_argument(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a TYPE_ARGUMENT reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_template_specialization","title":"record_ref_template_specialization","text":"<pre><code>record_ref_template_specialization(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a TEMPLATE_SPECIALIZATION reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_include","title":"record_ref_include","text":"<pre><code>record_ref_include(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an INCLUDE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_import","title":"record_ref_import","text":"<pre><code>record_ref_import(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an import reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier (who imports)</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier (who is imported)</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_bundled_edges","title":"record_ref_bundled_edges","text":"<pre><code>record_ref_bundled_edges(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a BUNDLED_EDGES reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_macro_usage","title":"record_ref_macro_usage","text":"<pre><code>record_ref_macro_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a MACRO_USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_ref_annotation_usage","title":"record_ref_annotation_usage","text":"<pre><code>record_ref_annotation_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an ANNOTATION_USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_reference_to_unsolved_symbol","title":"record_reference_to_unsolved_symbol","text":"<pre><code>record_reference_to_unsolved_symbol(\n    symbol_id,\n    reference_type,\n    file_id,\n    start_line,\n    start_column,\n    end_line,\n    end_column,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a reference to an unsolved symbol.</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>reference_type</code> <code>EdgeType</code> <p>The type of reference</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <code>hover_display</code> <code>str</code> <p>the display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>The identifier of the new reference</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_reference_is_ambiguous","title":"record_reference_is_ambiguous","text":"<pre><code>record_reference_is_ambiguous(reference_id)\n</code></pre> <p>Add an indication in the database to tell that the reference is ambiguous</p> <p>Parameters:</p> Name Type Description Default <code>reference_id</code> <code>int</code> <p>the identifier of the reference</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_file","title":"record_file","text":"<pre><code>record_file(path, indexed=True, hover_display='')\n</code></pre> <p>Record a source file in the database</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>The path to the existing source file</p> required <code>indexed</code> <code>bool</code> <p>A boolean that indicates if the source file was indexed by the parser</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>The display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>The identifier of the inserted file</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_file_language","title":"record_file_language","text":"<pre><code>record_file_language(id_, language)\n</code></pre> <p>Set the language of an existing file inside the database</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The identifier of the file</p> required <code>language</code> <code>str</code> <p>A string that indicate the programming language of the file</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_symbol_location","title":"record_symbol_location","text":"<pre><code>record_symbol_location(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type TOKEN</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_symbol_scope_location","title":"record_symbol_scope_location","text":"<pre><code>record_symbol_scope_location(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type SCOPE</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_symbol_signature_location","title":"record_symbol_signature_location","text":"<pre><code>record_symbol_signature_location(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type SCOPE</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_reference_location","title":"record_reference_location","text":"<pre><code>record_reference_location(\n    reference_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new reference location of type TOKEN</p> <p>Parameters:</p> Name Type Description Default <code>reference_id</code> <code>int</code> <p>The reference identifier</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_qualifier_location","title":"record_qualifier_location","text":"<pre><code>record_qualifier_location(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type QUALIFIER</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_local_symbol","title":"record_local_symbol","text":"<pre><code>record_local_symbol(name)\n</code></pre> <p>Record a new local symbol</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the new local symbol</p> required <p>Returns:</p> Type Description <code>int</code> <p>The identifier of the new local symbol</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_local_symbol_location","title":"record_local_symbol_location","text":"<pre><code>record_local_symbol_location(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type LOCAL_SYMBOL</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_atomic_source_range","title":"record_atomic_source_range","text":"<pre><code>record_atomic_source_range(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type ATOMIC_RANGE</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"public_api/#numbat.SourcetrailDB.record_error","title":"record_error","text":"<pre><code>record_error(\n    msg, fatal, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new indexer error in the database</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str</code> <p>The description of the error</p> required <code>fatal</code> <code>bool</code> <p>A boolean indicating if the error stop the execution of the parser</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file being parsed</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"tutorial/","title":"Tutorial","text":"<p>To understand the power of Numbat, we will register the different symbols contained in <code>file.py</code>.</p> file.py <pre><code>\"Example of Python file we would like to index\"\nclass MyType:\n\n    my_member = True\n\n    def my_method(self):\n        return self.my_member\n</code></pre>"},{"location":"tutorial/#database-manipulation","title":"Database Manipulation","text":"<p>First we are going to create a SourcetrailDB database. It could be done using either <code>open</code> or <code>create</code>, depending on if you want to open an already existing db or create one. In this tutorial we will create a new one or clear the old one with the same name using the following code.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n</code></pre> <p>After having added all the symbols, do not forget to <code>commit</code> your work and then  <code>close</code> the DB.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n# do some stuff\ndb.commit()\ndb.close()\n</code></pre> <p>It will create two files: a Sourcetrail DB file (<code>.srctrldb</code>) and project file (<code>.srctrlprj</code>). You can open the second one with your local Sourcetrail to explore your data.</p>"},{"location":"tutorial/#add-symbols","title":"Add Symbols","text":"<p>We could add a lot of different symbols as described in the full API reference but in anycase, they all have the same signature:</p> <pre><code>record_XX(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NameHierarchy.NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n)\n</code></pre> <ul> <li><code>name</code>: symbol name.</li> <li><code>prefix</code>: what to put before the name like <code>void *</code>.</li> <li><code>postfix</code>: what to put after the name like <code>()</code>.</li> <li><code>delimiter</code>: the delimiter between a parent and its child, by default it is <code>::</code>. The authorized delimiters are: <code>/</code>, <code>::</code>, <code>.</code> or <code>@</code>.</li> <li><code>parent_id</code>: if your symbol is a child of another symbol.</li> <li><code>is_indexed</code>: if your symbol exists in your input data or if it should exist but was not there (it will show as a grey   shadow).</li> </ul> <p>If we complete our script, we will need to add the class <code>My Type</code>, the field <code>my_member</code> and the method <code>my_method</code>.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# Add symbols\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\",\n                           postfix=\"():\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n\ndb.commit()\ndb.close()\n</code></pre> <p>When we open the current database with Sourcetrail after running this script, we obtain the following view:</p> <p> </p> Sourcetrail view after adding symbols."},{"location":"tutorial/#relationships","title":"Relationships","text":"<p>It is possible to add links between the different symbols after they have been created with the commands <code>record_ref_XX</code>. These relationships could be of several types. Here, in <code>file.py</code>, we can see that <code>my_method</code> is using the field <code>my_member</code>, so we could add an <code>USAGE</code> relation.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# Add symbols\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\",\n                           postfix=\"():\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n# Add relationships\ndb.record_ref_usage(meth_id, field_id)\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p> Usage link between a method and field member of the same class."},{"location":"tutorial/#record-associated-files","title":"Record Associated Files","text":"<p>Optionally, you can record inside Sourcetrail database a file corresponding to your graph data.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# Record file\nfile_id = db.record_file(Path('file.py'))\ndb.record_file_language(file_id, 'python')\n# Add symbols\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\",\n                           postfix=\"():\")\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\n# Add relationships\ndb.record_ref_usage(meth_id, field_id)\n\ndb.commit()\ndb.close()\n</code></pre>"},{"location":"tutorial/#link-symbols-and-source-code","title":"Link Symbols and Source Code","text":"<p>As you have inserted the source code and the symbols, you should create links between them to indicate to Sourcetrail where each symbol is located in the code, and if it is the case, its scope. For that, you could respectively use the <code>record_symbol_location</code> and <code>record_symbol_scope_location</code> methods.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True)\n\n# Record file\nfile_id = db.record_file(Path('file.py'))\ndb.record_file_language(file_id, 'python')\n# Add symbols\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\",\n                           postfix=\"():\")\ndb.record_symbol_location(class_id, file_id, 2, 7, 2, 12)\ndb.record_symbol_scope_location(class_id, file_id, 2, 1, 7, 1)\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\ndb.record_symbol_location(field_id, file_id, 4, 5, 4, 13)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\ndb.record_symbol_location(meth_id, file_id, 6, 9, 6, 17)\ndb.record_symbol_scope_location(meth_id, file_id, 6, 1, 7, 1)\n# Add relationships\ndb.record_ref_usage(meth_id, field_id)\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p>  Symbols are located into the source code."},{"location":"tutorial/#access-specifiers","title":"Access specifiers","text":"<p>To record an access specifier (public, private, etc...) for a class attribute, the <code>record_[public|private|etc...]_access</code> can be used.</p> <pre><code>from numbat import SourcetrailDB\nfrom pathlib import Path\n\ndb = SourcetrailDB.open(Path('my_database'), clear=True) \n\n# Record file\nfile_id = db.record_file(Path('file.py'))\ndb.record_file_language(file_id, 'python')\n# Add symbols\nclass_id = db.record_class(prefix=\"class\", name=\"MyType\",\n                           postfix=\"():\")\ndb.record_symbol_location(class_id, file_id, 2, 7, 2, 12)\ndb.record_symbol_scope_location(class_id, file_id, 2, 1, 7, 1)\nfield_id = db.record_field(name=\"my_member\", parent_id=class_id)\ndb.record_symbol_location(field_id, file_id, 4, 5, 4, 13)\nmeth_id = db.record_method(name=\"my_method\", parent_id=class_id)\ndb.record_symbol_location(meth_id, file_id, 6, 9, 6, 17)\ndb.record_symbol_scope_location(meth_id, file_id, 6, 1, 7, 1)\n# Add relationships\ndb.record_ref_usage(meth_id, field_id)\n# Add access specifiers\ndb.record_public_access(meth_id)\ndb.record_private_access(field_id)\n\ndb.commit()\ndb.close()\n</code></pre> <p> </p>  Public and private access specifiers"},{"location":"intern_dev/numbat/","title":"Numbat Internal Dev","text":""},{"location":"intern_dev/numbat/#numbat-architecture","title":"Numbat Architecture","text":"<p>The following picture provides an overview of Sourcetrail database. The main component is the element table which is used by almost all the other elements for simple cross-referencing between tables. </p> <p> Figure: Sourcetrail Database Structure</p> <p>Numbat is structured in three main submodules:</p> <ul> <li><code>numbat.types</code> which defines all the objects manipulated by Numbat. These objects mainly match the different database tables.</li> <li><code>numbat.db</code> which interacts with the SQlite Database.</li> <li><code>numbat.api</code> which is the implementation of the user API. It is exposed to the user directly through the main module <code>numbat</code>. It contains a lot of wrappers as the idea is to hide all the complex types used by Numbat to the final user.</li> </ul>"},{"location":"intern_dev/numbat/#differences-with-sourcetraildb","title":"Differences with SourcetrailDB","text":"<p>There are a few difference of behavior between this project and the existing SourcetrailDB API:</p> <ul> <li> <p>Duplicate in the Node table are not allowed, which means that is not possible to add, for example, two classes with the same prefix, name and postfix.</p> </li> <li> <p>Instead of returning invalid objects such as empty <code>NameHierarchy</code> when the serialization fails, an exception is raised.</p> </li> </ul> <p>Except these differences, Numbat implement the same API as SourcetrailDB with the addition of extra features.</p>"},{"location":"intern_dev/numbat/#testing","title":"Testing","text":"<p>In order to test for regression, some tests are available inside the <code>tests/</code> directory. The tests are  using the package <code>pytest</code> which can be used and installed like this:</p> <pre><code># Download the repo\ngit clone https://gitlab.qb/firmware-re/cartography/numbat\ncd numbat\n# Create a new virtual environement \npython -m venv venv\nsource venv/bin/activate\n# Install numbat locally\npip install '.[test]'\n# Run the test\npytest\n</code></pre>"},{"location":"intern_dev/numbat/api/","title":"Api","text":""},{"location":"intern_dev/numbat/api/#numbat.api","title":"numbat.api","text":"<p>Public API of Numbat. Allow to create and manipulate Sourcetrail DB</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB","title":"SourcetrailDB","text":"<pre><code>SourcetrailDB(database, path, logger=None)\n</code></pre> <p>This class implement a wrapper to Sourcetrail internal database, it is able to create, edit and delete the underlying sqlite3 database used by Sourcetrail.</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.exists","title":"exists  <code>classmethod</code>","text":"<pre><code>exists(path)\n</code></pre> <p>This method check if there is a Sourcetrail db with the given path. If the provided path does not end with the sourcetrail db correct suffix. It will be added.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path | str</code> <p>The path to test</p> required <p>Returns:</p> Type Description <code>bool</code> <p>a bool</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.open","title":"open  <code>classmethod</code>","text":"<pre><code>open(path, clear=False)\n</code></pre> <p>This method allow to open an existing sourcetrail database</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path | str</code> <p>The path to the existing database</p> required <code>clear</code> <code>bool</code> <p>If set to True the database is cleared (Optional)</p> <code>False</code> <p>Returns:</p> Type Description <code>SourcetrailDB</code> <p>the SourcetrailDB object corresponding to the given DB</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.create","title":"create  <code>classmethod</code>","text":"<pre><code>create(path)\n</code></pre> <p>This method allow to create a sourcetrail database</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path | str</code> <p>The path to the new database</p> required <p>Returns:</p> Type Description <code>SourcetrailDB</code> <p>the SourcetrailDB object corresponding to the given DB path</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.commit","title":"commit","text":"<pre><code>commit()\n</code></pre> <p>This method allow to commit changes made to a sourcetrail database. Any change made to the database using this API will be lost if not committed before closing the database.</p> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.clear","title":"clear","text":"<pre><code>clear()\n</code></pre> <p>Clear all elements present in the database.</p> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.close","title":"close","text":"<pre><code>close()\n</code></pre> <p>This method allow to close a sourcetrail database. The database must be closed after use in order to liberate memory and resources allocated for it.</p> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB._record_symbol","title":"_record_symbol","text":"<pre><code>_record_symbol(hierarchy, hover_display)\n</code></pre> <p>Record a new Symbol in the database</p> <p>Parameters:</p> Name Type Description Default <code>hierarchy</code> <code>NameHierarchy</code> <p>The hierarchy of the symbol to insert</p> required <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> required <p>Returns:</p> Type Description <code>int</code> <p>An unique integer that identify the inserted element</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB._get_symbol","title":"_get_symbol","text":"<pre><code>_get_symbol(hierarchy)\n</code></pre> <p>Return the corresponding Symbol from the database</p> <p>Parameters:</p> Name Type Description Default <code>hierarchy</code> <code>NameHierarchy</code> <p>The hierarchy of the symbol to retrieve</p> required <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the existing symbol or None if the symbol does not exist.</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB._record_symbol_kind","title":"_record_symbol_kind","text":"<pre><code>_record_symbol_kind(id_, type_)\n</code></pre> <p>Set the type of the symbol which is equivalent to setting the type of the underlying node.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The identifier of the element</p> required <code>type_</code> <code>NodeType</code> <p>The new type for the symbol</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB._record_symbol_definition_kind","title":"_record_symbol_definition_kind","text":"<pre><code>_record_symbol_definition_kind(id_, kind)\n</code></pre> <p>Set the type of definition of the corresponding element</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The identifier of the element</p> required <code>kind</code> <code>SymbolType</code> <p>The new type for the symbol</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_symbol_node","title":"record_symbol_node","text":"<pre><code>record_symbol_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a \"SYMBOL\" symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_type_node","title":"record_type_node","text":"<pre><code>record_type_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a TYPE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_buitin_type_node","title":"record_buitin_type_node","text":"<pre><code>record_buitin_type_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a BUILTIN_TYPE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_module","title":"record_module","text":"<pre><code>record_module(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a MODULE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_namespace","title":"record_namespace","text":"<pre><code>record_namespace(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a NAMESPACE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_package","title":"record_package","text":"<pre><code>record_package(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a PACKAGE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_struct","title":"record_struct","text":"<pre><code>record_struct(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a STRUCT symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_class","title":"record_class","text":"<pre><code>record_class(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a CLASS symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_interface","title":"record_interface","text":"<pre><code>record_interface(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a INTERFACE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_annotation","title":"record_annotation","text":"<pre><code>record_annotation(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a ANNOTATION symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_global_variable","title":"record_global_variable","text":"<pre><code>record_global_variable(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a GLOBAL_VARIABLE symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_field","title":"record_field","text":"<pre><code>record_field(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a FIELD symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_function","title":"record_function","text":"<pre><code>record_function(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a FUNCTION symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_method","title":"record_method","text":"<pre><code>record_method(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a METHOD symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_enum","title":"record_enum","text":"<pre><code>record_enum(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a ENUM symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_enum_constant","title":"record_enum_constant","text":"<pre><code>record_enum_constant(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a ENUM_CONSTANT symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_typedef_node","title":"record_typedef_node","text":"<pre><code>record_typedef_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a TYPEDEF symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_type_parameter_node","title":"record_type_parameter_node","text":"<pre><code>record_type_parameter_node(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a TYPE_PARAMETER symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_macro","title":"record_macro","text":"<pre><code>record_macro(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a MACRO symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_union","title":"record_union","text":"<pre><code>record_union(\n    name=\"\",\n    prefix=\"\",\n    postfix=\"\",\n    delimiter=NAME_DELIMITER_CXX,\n    parent_id=None,\n    is_indexed=True,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a UNION symbol into the DB</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the element to insert</p> <code>''</code> <code>prefix</code> <code>str</code> <p>The prefix of the element to insert</p> <code>''</code> <code>postfix</code> <code>str</code> <p>The postfix of the element to insert</p> <code>''</code> <code>delimiter</code> <code>str</code> <p>The delimiter of the element, if the element has a parent, it will not be taken into account as the parent delimiter will be used</p> <code>NAME_DELIMITER_CXX</code> <code>parent_id</code> <code>int</code> <p>The identifier of the class in which the method is defined.</p> <code>None</code> <code>is_indexed</code> <code>bool</code> <p>if the element is explicit or non-indexed</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>the display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int | None</code> <p>The identifier of the new class or None if it could not be inserted</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB._record_access_specifier","title":"_record_access_specifier","text":"<pre><code>_record_access_specifier(symbol_id, access)\n</code></pre> <p>Records an access specifier for a symbol (for example, if the symbol is a public one in the class)</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <code>access</code> <code>ComponentAccessType</code> <p>The access specifier to set (cf. ComponentAccessType)</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_public_access","title":"record_public_access","text":"<pre><code>record_public_access(symbol_id)\n</code></pre> <p>Record the <code>public</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_private_access","title":"record_private_access","text":"<pre><code>record_private_access(symbol_id)\n</code></pre> <p>Record the <code>private</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_protected_access","title":"record_protected_access","text":"<pre><code>record_protected_access(symbol_id)\n</code></pre> <p>Record the <code>protected</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_default_access","title":"record_default_access","text":"<pre><code>record_default_access(symbol_id)\n</code></pre> <p>Record the <code>default</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_template_parameter_access","title":"record_template_parameter_access","text":"<pre><code>record_template_parameter_access(symbol_id)\n</code></pre> <p>Record the <code>template parameter</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_type_parameter_access","title":"record_type_parameter_access","text":"<pre><code>record_type_parameter_access(symbol_id)\n</code></pre> <p>Record the <code>type parameter</code> access specifier for a symbol</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.set_node_type","title":"set_node_type","text":"<pre><code>set_node_type(type_to_change, graph_display='', hover_display='')\n</code></pre> <p>Change the display text of a node type.</p> <p>Allowed values for node types: <code>annotation</code> <code>built-in type</code> <code>class</code> <code>enum</code> <code>enum constant</code> <code>field</code> <code>file</code> <code>function</code> <code>global variable</code> <code>interface</code> <code>macro</code> <code>method</code> <code>module</code> <code>namespace</code> <code>package</code> <code>struct</code> <code>symbol</code> <code>type</code> <code>type parameter</code> <code>typedef</code> <code>union</code></p> <p>Parameters:</p> Name Type Description Default <code>type_to_change</code> <code>str</code> <p>The node type to update</p> required <code>graph_display</code> <code>str</code> <p>The display text in the Sourcetrail graph</p> <code>''</code> <code>hover_display</code> <code>str</code> <p>The display text when hovering over a node</p> <code>''</code>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.change_node_color","title":"change_node_color","text":"<pre><code>change_node_color(\n    node_id,\n    fill_color=\"default\",\n    border_color=\"default\",\n    text_color=\"default\",\n    icon_color=\"default\",\n    hatching_color=\"default\",\n)\n</code></pre> <p>Change the color of a node</p> <p>Supported values for colors: RGB hex code (e.g. #AABBCC), SVG color keyword</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>Id of the node to change</p> required <code>fill_color</code> <code>str</code> <p>Color of the node body</p> <code>'default'</code> <code>border_color</code> <code>str</code> <p>Color of the border</p> <code>'default'</code> <code>text_color</code> <code>str</code> <p>Color of the node text</p> <code>'default'</code> <code>icon_color</code> <code>str</code> <p>Color of the node icon (if applicable)</p> <code>'default'</code> <code>hatching_color</code> <code>str</code> <p>Color of the node hatching (if applicable)</p> <code>'default'</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.change_edge_color","title":"change_edge_color","text":"<pre><code>change_edge_color(edge_id, color)\n</code></pre> <p>Change the color of an edge</p> <p>Supported values for colors: RGB hex code (e.g. #AABBCC), SVG color keyword</p> <p>Parameters:</p> Name Type Description Default <code>edge_id</code> <code>int</code> <p>Id of the edge to change</p> required <code>color</code> <code>str</code> <p>RGB hex code or name of the edge's new color</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.set_custom_command","title":"set_custom_command","text":"<pre><code>set_custom_command(node_id, command, description)\n</code></pre> <p>Add a custom command to a node's context menu</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>Id of the node to add the custom command to</p> required <code>command</code> <code>list</code> <p>List containing the command to execute and its arguments</p> required <code>description</code> <code>str</code> <p>Description of the command</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.associate_file_to_node","title":"associate_file_to_node","text":"<pre><code>associate_file_to_node(node_id, file, display_content)\n</code></pre> <p>Copy a file to the project directory and link it to a node</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>Id of the node to link</p> required <code>file</code> <code>Path</code> <p>Path to the file to link</p> required <code>display_content</code> <code>bool</code> <p>Whether the file content should be displayed or not</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB._record_reference","title":"_record_reference","text":"<pre><code>_record_reference(source_id, dest_id, type_, hover_display)\n</code></pre> <p>Add a new reference (an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier of the reference</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier of the reference</p> required <code>type_</code> <code>EdgeType</code> <p>The type of reference to add</p> required <p>Returns:</p> Type Description <code>int</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_member","title":"record_ref_member","text":"<pre><code>record_ref_member(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a member reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_type_usage","title":"record_ref_type_usage","text":"<pre><code>record_ref_type_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a TYPE_USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_usage","title":"record_ref_usage","text":"<pre><code>record_ref_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_call","title":"record_ref_call","text":"<pre><code>record_ref_call(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a CALL reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_inheritance","title":"record_ref_inheritance","text":"<pre><code>record_ref_inheritance(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an INHERITANCE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_override","title":"record_ref_override","text":"<pre><code>record_ref_override(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an OVERRIDE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_type_argument","title":"record_ref_type_argument","text":"<pre><code>record_ref_type_argument(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a TYPE_ARGUMENT reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_template_specialization","title":"record_ref_template_specialization","text":"<pre><code>record_ref_template_specialization(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a TEMPLATE_SPECIALIZATION reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_include","title":"record_ref_include","text":"<pre><code>record_ref_include(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an INCLUDE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_import","title":"record_ref_import","text":"<pre><code>record_ref_import(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an import reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier (who imports)</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier (who is imported)</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_bundled_edges","title":"record_ref_bundled_edges","text":"<pre><code>record_ref_bundled_edges(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a BUNDLED_EDGES reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_macro_usage","title":"record_ref_macro_usage","text":"<pre><code>record_ref_macro_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add a MACRO_USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_ref_annotation_usage","title":"record_ref_annotation_usage","text":"<pre><code>record_ref_annotation_usage(source_id, dest_id, hover_display='')\n</code></pre> <p>Add an ANNOTATION_USAGE reference (aka an edge) between two elements</p> <p>Parameters:</p> Name Type Description Default <code>source_id</code> <code>int</code> <p>The source identifier</p> required <code>dest_id</code> <code>int</code> <p>The destination identifier</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>the reference id</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_reference_to_unsolved_symbol","title":"record_reference_to_unsolved_symbol","text":"<pre><code>record_reference_to_unsolved_symbol(\n    symbol_id,\n    reference_type,\n    file_id,\n    start_line,\n    start_column,\n    end_line,\n    end_column,\n    hover_display=\"\",\n)\n</code></pre> <p>Record a reference to an unsolved symbol.</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>reference_type</code> <code>EdgeType</code> <p>The type of reference</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <code>hover_display</code> <code>str</code> <p>the display text when hovering over the edge</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>The identifier of the new reference</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_reference_is_ambiguous","title":"record_reference_is_ambiguous","text":"<pre><code>record_reference_is_ambiguous(reference_id)\n</code></pre> <p>Add an indication in the database to tell that the reference is ambiguous</p> <p>Parameters:</p> Name Type Description Default <code>reference_id</code> <code>int</code> <p>the identifier of the reference</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_file","title":"record_file","text":"<pre><code>record_file(path, indexed=True, hover_display='')\n</code></pre> <p>Record a source file in the database</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>The path to the existing source file</p> required <code>indexed</code> <code>bool</code> <p>A boolean that indicates if the source file was indexed by the parser</p> <code>True</code> <code>hover_display</code> <code>str</code> <p>The display text when hovering over the node</p> <code>''</code> <p>Returns:</p> Type Description <code>int</code> <p>The identifier of the inserted file</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_file_language","title":"record_file_language","text":"<pre><code>record_file_language(id_, language)\n</code></pre> <p>Set the language of an existing file inside the database</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The identifier of the file</p> required <code>language</code> <code>str</code> <p>A string that indicate the programming language of the file</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_symbol_location","title":"record_symbol_location","text":"<pre><code>record_symbol_location(symbol_id, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new source location of type TOKEN</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_symbol_scope_location","title":"record_symbol_scope_location","text":"<pre><code>record_symbol_scope_location(symbol_id, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new source location of type SCOPE</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_symbol_signature_location","title":"record_symbol_signature_location","text":"<pre><code>record_symbol_signature_location(\n    symbol_id, file_id, start_line, start_column, end_line, end_column\n)\n</code></pre> <p>Record a new source location of type SCOPE</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_reference_location","title":"record_reference_location","text":"<pre><code>record_reference_location(reference_id, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new reference location of type TOKEN</p> <p>Parameters:</p> Name Type Description Default <code>reference_id</code> <code>int</code> <p>The reference identifier</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_qualifier_location","title":"record_qualifier_location","text":"<pre><code>record_qualifier_location(symbol_id, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new source location of type QUALIFIER</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_local_symbol","title":"record_local_symbol","text":"<pre><code>record_local_symbol(name)\n</code></pre> <p>Record a new local symbol</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the new local symbol</p> required <p>Returns:</p> Type Description <code>int</code> <p>The identifier of the new local symbol</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_local_symbol_location","title":"record_local_symbol_location","text":"<pre><code>record_local_symbol_location(symbol_id, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new source location of type LOCAL_SYMBOL</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_atomic_source_range","title":"record_atomic_source_range","text":"<pre><code>record_atomic_source_range(symbol_id, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new source location of type ATOMIC_RANGE</p> <p>Parameters:</p> Name Type Description Default <code>symbol_id</code> <code>int</code> <p>The identifier of the symbol</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file in which the symbol is located</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/api/#numbat.api.SourcetrailDB.record_error","title":"record_error","text":"<pre><code>record_error(msg, fatal, file_id, start_line, start_column, end_line, end_column)\n</code></pre> <p>Record a new indexer error in the database</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str</code> <p>The description of the error</p> required <code>fatal</code> <code>bool</code> <p>A boolean indicating if the error stop the execution of the parser</p> required <code>file_id</code> <code>int</code> <p>The identifier of the source file being parsed</p> required <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> required <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> required <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> required <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/","title":"Db","text":""},{"location":"intern_dev/numbat/db/#numbat.db","title":"numbat.db","text":""},{"location":"intern_dev/numbat/db/#numbat.db.SqliteHelper","title":"SqliteHelper","text":"<p>Helper class for sqlite operation</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SqliteHelper.connect","title":"connect  <code>staticmethod</code>","text":"<pre><code>connect(path)\n</code></pre> <p>Wrapper for sqlite3 connect method so the api doesn't rely directly on sqlite and his more general</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>The path to the database, if the path doesn't point to an existing file, a new database file will be created</p> required <p>Returns:</p> Type Description <code>Connection</code> <p>A connection handle that can be used for future operation on the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SqliteHelper.exec","title":"exec  <code>staticmethod</code>","text":"<pre><code>exec(database, request, parameters=())\n</code></pre> <p>Execute the sqlite request without returning the result</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>request</code> <code>str</code> <p>The SQL request to execute</p> required <code>parameters</code> <code>tuple</code> <p>A tuple containing values for the bind parameters of the SQL request (if any)</p> <code>()</code> <p>Returns:</p> Type Description <code>int</code> <p>The id of the last modified row (useful in case insertion)</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SqliteHelper.fetch","title":"fetch  <code>staticmethod</code>","text":"<pre><code>fetch(database, request, parameters=())\n</code></pre> <p>Return the result of the sqlite request as list</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>request</code> <code>str</code> <p>The SQL request to execute</p> required <code>parameters</code> <code>tuple</code> <p>A tuple containing values for the bind parameters of the SQL request (if any)</p> <code>()</code> <p>Returns:</p> Type Description <code>list</code> <p>A list containing the results of the SQL request</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO","title":"ElementDAO","text":"<p>This class is a static class that can manipulate Element objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the element table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the element table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new Element inside the element table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Element</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted element</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an Element from the element table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Element</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Elements from the element table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return an element from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the element to retrieve</p> required <p>Returns:</p> Type Description <code>Element</code> <p>A Element object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an Element inside the element table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Element</code> <p>The Element object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the elements from the element table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[Element]</code> <p>The list of Elements</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO","title":"ElementComponentDAO","text":"<p>This class is a static class that can manipulate ElementComponent objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the element_component table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the element_component table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new ElementComponent inside the element_component table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>ElementComponent</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted element</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an ElementComponent from the element_component table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>ElementComponent</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all ElementComponents from the element_component table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a ElementComponent from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the element_component to retrieve</p> required <p>Returns:</p> Type Description <code>ElementComponent</code> <p>A ElementComponent object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an ElementComponent inside the element_component table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>ElementComponent</code> <p>The Element object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ElementComponentDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the elements from the element_component table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[ElementComponent]</code> <p>The list of ElementComponents</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO","title":"EdgeDAO","text":"<p>This class is a static class that can manipulate Edge objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the edge table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the edge table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new Edge inside the edge table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Edge</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted element</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an Edge from the edge table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Edge</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Edges from the edge table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return an Edge from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the element to retrieve</p> required <p>Returns:</p> Type Description <code>Edge</code> <p>A Edge object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an Edge inside the element table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Edge</code> <p>The Edge object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the elements from the edge table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[Edge]</code> <p>The list of Edges</p>"},{"location":"intern_dev/numbat/db/#numbat.db.EdgeDAO.set_color","title":"set_color  <code>staticmethod</code>","text":"<pre><code>set_color(database, id, new_color)\n</code></pre> <p>Set the color of an edge</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id</code> <code>int</code> <p>Id of the edge to change</p> required <code>new_color</code> <code>str</code> <p>RGB hex code or name of the edge's new color</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO","title":"NodeDAO","text":"<p>This class is a static class that can manipulate Node objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the node table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the node table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new Node inside the node table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Node</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted element</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete a Node from the node table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Node</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Nodes from the node table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a Node from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the element to retrieve</p> required <p>Returns:</p> Type Description <code>Node</code> <p>A Node object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.get_by_name","title":"get_by_name  <code>staticmethod</code>","text":"<pre><code>get_by_name(database, name)\n</code></pre> <p>Return a Node from the database with the matching serialized_name</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>name</code> <code>str</code> <p>The serialized_name of the element to retrieve</p> required <p>Returns:</p> Type Description <code>Node</code> <p>A Node object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update a Node inside the node table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Node</code> <p>The Node object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the elements from the node table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[Node]</code> <p>The list of Nodes</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.set_color","title":"set_color  <code>staticmethod</code>","text":"<pre><code>set_color(database, id, new_color)\n</code></pre> <p>Set the color of a node</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id</code> <code>int</code> <p>Id of the node to modify</p> required <code>new_color</code> <code>str</code> <p>RGB hex code or name of the node's new color</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeDAO.set_custom_command","title":"set_custom_command  <code>staticmethod</code>","text":"<pre><code>set_custom_command(database, id, custom_command)\n</code></pre> <p>Set a custom command for a node in its context menu</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id</code> <code>int</code> <p>Id of the node to modify</p> required <code>custom_command</code> <code>tuple</code> <p>The command to execute (including arguments) and its description</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO","title":"NodeTypeDAO","text":"<p>Handle Sourcetrail's internal node types.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the node type table if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all entries from the node_type table, and resets them to their default values.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO.init","title":"init  <code>staticmethod</code>","text":"<pre><code>init(database)\n</code></pre> <p>Load the default values for each node type.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO.get_by_id","title":"get_by_id  <code>staticmethod</code>","text":"<pre><code>get_by_id(database, id)\n</code></pre> <p>Get an element from the database with the specified id.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id</code> <code>NodeType</code> <p>the id of the object to return</p> required <p>Returns:</p> Type Description <code>NodeDisplay</code> <p>The object with the specified id.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeTypeDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Change the display text of an internal node type.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>NodeDisplay</code> <p>the type to change</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO","title":"SymbolDAO","text":"<p>This class is a static class that can manipulate Symbol objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the symbol table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the symbol table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new Symbol inside the symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Symbol</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted symbol</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete a Symbol from the symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Symbol</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Symbols from the symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a symbol from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the symbol to retrieve</p> required <p>Returns:</p> Type Description <code>Symbol</code> <p>A Symbol object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update a Symbol inside the symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Symbol</code> <p>The Symbol object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SymbolDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the symbols from the symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[Symbol]</code> <p>The list of Symbols</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO","title":"FileDAO","text":"<p>This class is a static class that can manipulate File objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the file table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the file table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new File inside the file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>File</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted file</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete a File from the file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>File</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Files from the file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a file from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the file to retrieve</p> required <p>Returns:</p> Type Description <code>File</code> <p>A File object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update a File inside the file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>File</code> <p>The File object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the files from the file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[File]</code> <p>The list of Files</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO","title":"FileContentDAO","text":"<p>This class is a static class that can manipulate FileContent objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the filecontent table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the filecontent table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new FileContent inside the filecontent table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>FileContent</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted filecontent</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an FileContent from the filecontent table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>FileContent</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all FileContents from the filecontent table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a filecontent from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the filecontent to retrieve</p> required <p>Returns:</p> Type Description <code>FileContent</code> <p>A FileContent object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an FileContent inside the filecontent table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>FileContent</code> <p>The FileContent object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.FileContentDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the filecontents from the filecontent table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[FileContent]</code> <p>The list of FileContents</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeFileDAO","title":"NodeFileDAO","text":"<p>This class is a static class that can manipulate NodeFile objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeFileDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the node_file table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeFileDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the node_file table of the Sourcetrail database if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeFileDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new NodeFile inside the node_file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>NodeFile</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted node_file</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeFileDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an NodeFile from the node_file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>NodeFile</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.NodeFileDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all NodeFiles from the node_file table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO","title":"LocalSymbolDAO","text":"<p>This class is a static class that can manipulate LocalSymbol objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the local_symbol table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the local_symbol table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new LocalSymbol inside the local_symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>LocalSymbol</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted local_symbol</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an LocalSymbol from the local_symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>LocalSymbol</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all LocalSymbols from the local_symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a local_symbol from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the local_symbol to retrieve</p> required <p>Returns:</p> Type Description <code>LocalSymbol</code> <p>A LocalSymbol object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.get_from_name","title":"get_from_name  <code>staticmethod</code>","text":"<pre><code>get_from_name(database, name)\n</code></pre> <p>Return a local_symbol from the database with the matching name</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>name</code> <code>str</code> <p>The name of the local_symbol to retrieve</p> required <p>Returns:</p> Type Description <code>LocalSymbol</code> <p>A LocalSymbol object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an LocalSymbol inside the local_symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>LocalSymbol</code> <p>The LocalSymbol object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.LocalSymbolDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the local_symbols from the local_symbol table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[LocalSymbol]</code> <p>The list of LocalSymbols</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO","title":"SourceLocationDAO","text":"<p>This class is a static class that can manipulate SourceLocation objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the source_location table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the source_location table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new SourceLocation inside the source_location table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>SourceLocation</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted source_location</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an SourceLocation from the source_location table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>SourceLocation</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all SourceLocations from the source_location table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a source_location from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the source_location to retrieve</p> required <p>Returns:</p> Type Description <code>SourceLocation</code> <p>A SourceLocation object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an SourceLocation inside the source_location table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>SourceLocation</code> <p>The SourceLocation object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.SourceLocationDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the source_locations from the source_location table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[SourceLocation]</code> <p>The list of SourceLocations</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO","title":"OccurrenceDAO","text":"<p>This class is a static class that can manipulate Occurrence objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the occurrence table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the occurrence table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new Occurrence inside the occurrence table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Occurrence</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted occurrence</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an Occurrence from the occurrence table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Occurrence</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Occurrences from the occurrence table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return an occurrence from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the occurrence to retrieve</p> required <p>Returns:</p> Type Description <code>Occurrence</code> <p>A Occurrence object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an Occurrence inside the occurrence table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Occurrence</code> <p>The Occurrence object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.OccurrenceDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the occurrences from the occurrence table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[Occurrence]</code> <p>The list of Occurrences</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO","title":"ComponentAccessDAO","text":"<p>This class is a static class that can manipulate ComponentAccess objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the component_access table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the component_access table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new ComponentAccess inside the component_access table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>ComponentAccess</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted component_access</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an ComponentAccess from the component_access table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>ComponentAccess</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all ComponentAccess from the component_access table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return a component_access from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the component_access to retrieve</p> required <p>Returns:</p> Type Description <code>ComponentAccess</code> <p>A ComponentAccess object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an ComponentAccess inside the component_access table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>ComponentAccess</code> <p>The ComponentAccess object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ComponentAccessDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the component_access from the component_access table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[ComponentAccess]</code> <p>The list of ComponentAccess</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO","title":"ErrorDAO","text":"<p>This class is a static class that can manipulate Error objects, inserting and removing them from a sqlite database.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the error table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the error table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, obj)\n</code></pre> <p>Insert a new Error inside the error table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Error</code> <p>The object to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted error</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, obj)\n</code></pre> <p>Delete an Error from the error table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Error</code> <p>The object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, elem_id)\n</code></pre> <p>Return an error from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>elem_id</code> <code>int</code> <p>The id of the error to retrieve</p> required <p>Returns:</p> Type Description <code>Error</code> <p>A Error object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Errors from the error table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, obj)\n</code></pre> <p>Update an Error inside the error table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>obj</code> <code>Error</code> <p>The Error object to update</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.ErrorDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the errors from the error table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[Error]</code> <p>The list of Errors</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO","title":"MetaDAO","text":"<p>This class is a static class that can manipulate Meta information, inserting and removing them from a sqlite database. There is no Meta object but a simple key, value pair can be used.</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.create_table","title":"create_table  <code>staticmethod</code>","text":"<pre><code>create_table(database)\n</code></pre> <p>Create the meta table of the Sourcetrail database if it doesn't exist.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.delete_table","title":"delete_table  <code>staticmethod</code>","text":"<pre><code>delete_table(database)\n</code></pre> <p>Delete the meta table of the Sourcetrail database only if it exists.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(database, key, value)\n</code></pre> <p>Insert a new Meta inside the meta table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>key</code> <code>str</code> <p>The key to insert</p> required <code>value</code> <code>str</code> <p>The value to insert</p> required <p>Returns:</p> Type Description <code>int</code> <p>The id of the inserted meta</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.delete","title":"delete  <code>staticmethod</code>","text":"<pre><code>delete(database, id_)\n</code></pre> <p>Delete a Meta from the meta table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id_</code> <code>int</code> <p>The identifier of the object to delete</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.get","title":"get  <code>staticmethod</code>","text":"<pre><code>get(database, id_)\n</code></pre> <p>Return a meta from the database with the matching id</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id_</code> <code>int</code> <p>The id of the meta to retrieve</p> required <p>Returns:</p> Type Description <code>tuple[int, str, str]</code> <p>A Meta object that reflect the content inside the database</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.clear","title":"clear  <code>staticmethod</code>","text":"<pre><code>clear(database)\n</code></pre> <p>Delete all Metas from the meta table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.update","title":"update  <code>staticmethod</code>","text":"<pre><code>update(database, id_, key, value)\n</code></pre> <p>Update a Meta inside the meta table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <code>id_</code> <code>int</code> <p>The id of the meta to update</p> required <code>key</code> <code>str</code> <p>The key to update</p> required <code>value</code> <code>str</code> <p>The value to insert</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/db/#numbat.db.MetaDAO.list","title":"list  <code>staticmethod</code>","text":"<pre><code>list(database)\n</code></pre> <p>Return the list of all the metas from the meta table.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>Connection</code> <p>A database handle</p> required <p>Returns:</p> Type Description <code>list[tuple[int, str, str]]</code> <p>The list of Metas</p>"},{"location":"intern_dev/numbat/types/","title":"Types","text":""},{"location":"intern_dev/numbat/types/#numbat.types","title":"numbat.types","text":""},{"location":"intern_dev/numbat/types/#numbat.types.Element","title":"Element","text":"<pre><code>Element(id_=0)\n</code></pre> <p>Wrapper class for sourcetrail 'element' table:</p> <pre><code>CREATE TABLE element(\n    id INTEGER, \n    PRIMARY KEY(id)\n)\n</code></pre> <p>The 'element' table is used in sourcetrail to be able to easily manage other elements of others tables. Since all higher level element are referencing an element in the 'element' table it's possible to remove any element by removing the correct entry in the 'element' table.</p> <p>Create a new Element object. </p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code>"},{"location":"intern_dev/numbat/types/#numbat.types.ElementComponentType","title":"ElementComponentType","text":"<p>Internal class that represent an ElementComponent type  inside the sourcetrail database. This type is used to  indicate that an element component is ambiguous.</p>"},{"location":"intern_dev/numbat/types/#numbat.types.ElementComponent","title":"ElementComponent","text":"<pre><code>ElementComponent(id_=0, elem_id=0, type_=NONE, data='')\n</code></pre> <p>Wrapper class for sourcetrail element_component table:</p> <pre><code>CREATE TABLE element_component(\n    id INTEGER,         \n    element_id INTEGER,         \n    type INTEGER,       \n    data TEXT,  \n    PRIMARY KEY(id),    \n    FOREIGN KEY(element_id) REFERENCES element(id) ON DELETE CASCADE\n)\n</code></pre> <p>This table is not commonly used, it only contains indication about the ambiguity of another element such as an edge or a node.</p> <p>Create a new ElementComponent object. </p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>elem_id</code> <code>int</code> <p>The id of the referenced element</p> <code>0</code> <code>type_</code> <code>ElementComponentType</code> <p>The type of the ElementComponent</p> <code>NONE</code> <code>data</code> <code>str</code> <p>Additional data (optional)</p> <code>''</code>"},{"location":"intern_dev/numbat/types/#numbat.types.EdgeType","title":"EdgeType","text":"<p>Internal class that represent an Edge type inside the sourcetrail database. This type define the relationship between the nodes.</p>"},{"location":"intern_dev/numbat/types/#numbat.types.Edge","title":"Edge","text":"<pre><code>Edge(id_=0, type_=UNDEFINED, src=0, dst=0, hover_display='')\n</code></pre> <p>Wrapper class for sourcetrail edge table:</p> <pre><code>CREATE TABLE edge(\n    id INTEGER NOT NULL, \n    type INTEGER NOT NULL, \n    source_node_id INTEGER NOT NULL, \n    target_node_id INTEGER NOT NULL, \n    color TEXT, \n    hover_display TEXT, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES element(id) ON DELETE CASCADE, \n    FOREIGN KEY(source_node_id) REFERENCES node(id) ON DELETE CASCADE, \n    FOREIGN KEY(target_node_id) REFERENCES node(id) ON DELETE CASCADE\n) \n</code></pre> <p>The 'edge' table is used to define relation between element of the 'node' table. For example, it can be used to indicate that a field is a member of a class or a function foo is calling another function bar.</p> <p>Create a new Edge object. </p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>type_</code> <code>EdgeType</code> <p>The type of the Edge</p> <code>UNDEFINED</code> <code>src</code> <code>int</code> <p>The id of the source element</p> <code>0</code> <code>dst</code> <code>int</code> <p>The id of the destination element</p> <code>0</code> <code>hover_display</code> <code>str</code> <p>The display text when hovering over the Edge</p> <code>''</code>"},{"location":"intern_dev/numbat/types/#numbat.types.NodeType","title":"NodeType","text":"<p>Internal class that represent an Edge type inside the sourcetrail database. This type define the type of the node in the database.</p>"},{"location":"intern_dev/numbat/types/#numbat.types.Node","title":"Node","text":"<pre><code>Node(id_=0, type_=NODE_TYPE, name='', hover_display='')\n</code></pre> <p>Wrapper class for sourcetrail node table:</p> <pre><code>CREATE TABLE node(\n    id INTEGER NOT NULL, \n    type INTEGER NOT NULL, \n    serialized_name TEXT, \n    color TEXT, \n    hover_display TEXT, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES element(id) ON DELETE CASCADE\n)\n</code></pre> <p>The 'node' table is the main table of the sourcetrail database. It allows to store elements such as function, class, package, etc. However, this table is weirdly implemented as the field 'serialized_name' contains  another type called NameHierarchy with a custom serialization format.</p> <p>The NameHierarchy describe a relationship between node elements, for example, a class 'A' with a member 'b' will result in two entries in the database:</p> <pre><code>id1 | NODE_CLASS | '.       A       s       p' \nid2 | NODE_FIELD | '.       A       s       p       m       b       s       p'\n</code></pre> <p>The above example shows that the 'serialized_name' of the member 'b' (id2) hold some information about his parent 'A' (id1).</p> <p>Create a new Node object. </p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>type_</code> <code>NodeType</code> <p>The type of the Node</p> <code>NODE_TYPE</code> <code>name</code> <code>str</code> <p>The serialized name of the Node</p> <code>''</code> <code>hover_display</code> <code>str</code> <p>The display text when hovering over the Node</p> <code>''</code>"},{"location":"intern_dev/numbat/types/#numbat.types.NodeDisplay","title":"NodeDisplay","text":"<pre><code>NodeDisplay(id, graph_display, hover_display)\n</code></pre> <p>Represent how Sourcetrail's internal node types are displayed.</p> <pre><code>CREATE TABLE IF NOT EXISTS node_type(\n    id INTEGER NOT NULL, \n    type TEXT, \n    kind TEXT, \n    PRIMARY KEY(id)\n) \n</code></pre> <p>The 'node_type' table is used to store how each type of node is displayed.</p> <p>Create a new NodeDisplay object.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>NodeType</code> <p>The internal id according to the NodeType enum</p> required <code>graph_display</code> <code>str</code> <p>The display text in the Sourcetrail graph</p> required <code>hover_display</code> <code>str</code> <p>The display text when hovering over a node</p> required"},{"location":"intern_dev/numbat/types/#numbat.types.SymbolType","title":"SymbolType","text":"<p>Internal class that represent a Symbol type inside the  sourcetrail database. This type define the symbol type in the database.</p>"},{"location":"intern_dev/numbat/types/#numbat.types.Symbol","title":"Symbol","text":"<pre><code>Symbol(id_=0, definition=NONE)\n</code></pre> <p>Wrapper class for sourcetrail symbol table:</p> <pre><code>CREATE TABLE symbol(\n    id INTEGER NOT NULL, \n    definition_kind INTEGER NOT NULL, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES node(id) ON DELETE CASCADE\n) \n</code></pre> <p>The 'symbol' table is used to add additional information on elements  such as node.</p> <p>Create a new Symbol object. </p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>definition</code> <code>SymbolType</code> <p>The type of the Symbol</p> <code>NONE</code>"},{"location":"intern_dev/numbat/types/#numbat.types.File","title":"File","text":"<pre><code>File(id_=0, path='', language='', modification_time='', indexed=0, complete=0, line_count=0)\n</code></pre> <p>Wrapper class for sourcetrail file table:</p> <pre><code>CREATE TABLE file(\n    id INTEGER NOT NULL, \n    path TEXT, \n    language TEXT, \n    modification_time TEXT, \n    indexed INTEGER, \n    complete INTEGER, \n    line_count INTEGER, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES node(id) ON DELETE CASCADE\n)\n</code></pre> <p>The 'file' table hold the information about the different source file that have been parsed by sourcetrail. Each one of them contains an id that  will be reference by the element of the 'filecontent' table.</p> <p>Create a new File object.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>path</code> <code>str</code> <p>The path to the source file</p> <code>''</code> <code>language</code> <code>str</code> <p>The language of the source file.</p> <code>''</code> <code>modification_time</code> <code>str</code> <p>The time of the last modification of the source file</p> <code>''</code> <code>indexed</code> <code>int</code> <p>A indication to tell if the file was indexed or not (0 or 1)</p> <code>0</code> <code>complete</code> <code>int</code> <p>A indicate to tell if the indexing is complete or not (0 or 1)</p> <code>0</code> <code>line_count</code> <code>int</code> <p>The number of line in the source file</p> <code>0</code>"},{"location":"intern_dev/numbat/types/#numbat.types.FileContent","title":"FileContent","text":"<pre><code>FileContent(id_=0, content='')\n</code></pre> <p>Wrapper class for sourcetrail filecontent table:</p> <pre><code>CREATE TABLE filecontent(\n    id INTEGER, \n    content TEXT, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES file(id)ON DELETE CASCADE ON UPDATE CASCADE\n)\n</code></pre> <p>The 'filecontent' table holds the content of the different source file.  Because the id field of the filecontent is a primary key (unique element) a filecontent should contain the entire content of a file.</p> <p>Create a new FileContent object.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>content</code> <code>str</code> <p>The content of the source file.</p> <code>''</code>"},{"location":"intern_dev/numbat/types/#numbat.types.NodeFile","title":"NodeFile","text":"<pre><code>NodeFile(file_id, file_name, display_content)\n</code></pre> <p>Wrapper class for node_file table</p> <pre><code>CREATE TABLE node_file(\n    file_id INTEGER,\n    file_name TEXT,\n    display_content INTEGER, \n    PRIMARY KEY(id),\n    FOREIGN KEY(id) REFERENCES node(id) ON DELETE CASCADE\n)\n</code></pre> <p>The 'node_file' table contains the paths to all files that have been copied to the project folder, and the node they are associated to.</p> <p>Create a new NodeFile object.</p> <p>Parameters:</p> Name Type Description Default <code>file_id</code> <code>int</code> <p>id of the copied file</p> required <code>file_name</code> <code>str</code> <p>path to the copy</p> required <code>display_content</code> <code>bool</code> <p>whether the file content should be displayed or not</p> required"},{"location":"intern_dev/numbat/types/#numbat.types.LocalSymbol","title":"LocalSymbol","text":"<pre><code>LocalSymbol(id_=0, name='')\n</code></pre> <p>Wrapper class for sourcetrail local_symbol table:</p> <pre><code>CREATE TABLE local_symbol(\n    id INTEGER NOT NULL, \n    name TEXT, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES element(id) ON DELETE CASCADE\n)\n</code></pre> <p>The 'local_symbol' table holds reference to nodes that represent elements such as variables only used locally. For example, the following code snippet:</p> <pre><code>int foo(int a)\n{\n    my_global_func();\n    int b = 2 * a;\n    return b;\n}\n</code></pre> <p>While result in 3 different nodes, two of them (a and b) with have an entry in the 'local_symbol' table. The content of this table is not essential to the application but can provide a better level of detail to the user when browsing code in Sourcetrail UI.</p> <p>Create a new LocalSymbol object.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>name</code> <code>str</code> <p>The name of local symbol</p> <code>''</code>"},{"location":"intern_dev/numbat/types/#numbat.types.SourceLocationType","title":"SourceLocationType","text":"<p>Internal class that represent a SymbolLocation type inside the  sourcetrail database. This type define the symbol location type in the database and can be used to indicate indexing errors.</p>"},{"location":"intern_dev/numbat/types/#numbat.types.SourceLocation","title":"SourceLocation","text":"<pre><code>SourceLocation(\n    id_=0, file_node_id=0, start_line=0, start_column=0, end_line=0, end_column=0, type_=UNSOLVED\n)\n</code></pre> <p>Wrapper class for sourcetrail source_location table:</p> <pre><code>CREATE TABLE source_location(\n    id INTEGER NOT NULL, \n    file_node_id INTEGER, \n    start_line INTEGER, \n    start_column INTEGER, \n    end_line INTEGER, \n    end_column INTEGER, \n    type INTEGER, \n    PRIMARY KEY(id), \n    FOREIGN KEY(file_node_id) REFERENCES node(id) ON DELETE CASCADE\n)\n</code></pre> <p>The table 'source_location' contain some entries indicating where the corresponding node element (the ones that are referenced by the id) are located in the source tree.</p> <p>Create a new SourceLocation object.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>file_node_id</code> <code>int</code> <p>The id of the file element corresponding to this content.</p> <code>0</code> <code>start_line</code> <code>int</code> <p>The line at which the element starts.</p> <code>0</code> <code>start_column</code> <code>int</code> <p>The column at which the element starts.</p> <code>0</code> <code>end_line</code> <code>int</code> <p>The line at which the element ends.</p> <code>0</code> <code>end_column</code> <code>int</code> <p>The line at which the element ends.</p> <code>0</code> <code>type_</code> <code>SourceLocationType</code> <p>The type of the source location.</p> <code>UNSOLVED</code>"},{"location":"intern_dev/numbat/types/#numbat.types.Occurrence","title":"Occurrence","text":"<pre><code>Occurrence(elem_id=0, source_location_id=0)\n</code></pre> <p>Wrapper class for sourcetrail occurrence table:</p> <pre><code>CREATE TABLE occurrence(\n    element_id INTEGER NOT NULL, \n    source_location_id INTEGER NOT NULL, \n    PRIMARY KEY(element_id, source_location_id), \n    FOREIGN KEY(element_id) REFERENCES element(id) ON DELETE CASCADE, \n    FOREIGN KEY(source_location_id) REFERENCES source_location(id) \n        ON DELETE CASCADE\n)\n</code></pre> <p>The table 'occurrence' allow to link the elements define in the 'source_location' table and the ones define in the 'node' table.</p> <p>Create a new Occurrence object.</p> <p>Parameters:</p> Name Type Description Default <code>elem_id</code> <code>int</code> <p>The id of the element referenced by this occurrence</p> <code>0</code> <code>source_location_id</code> <code>int</code> <p>The id of the source location referenced by this occurrence</p> <code>0</code>"},{"location":"intern_dev/numbat/types/#numbat.types.ComponentAccessType","title":"ComponentAccessType","text":"<p>Internal class that represent a ComponentAccess type inside  the sourcetrail database. This type define the type of  ComponentAccess in the database and can be used to add extra information regarding the visibility of elements (in the  \"Object-Oriented\" sens)</p>"},{"location":"intern_dev/numbat/types/#numbat.types.ComponentAccess","title":"ComponentAccess","text":"<pre><code>ComponentAccess(node_id=0, type_=NONE)\n</code></pre> <p>Wrapper class for sourcetrail component_access table:</p> <pre><code>CREATE TABLE component_access(\n    node_id INTEGER NOT NULL, \n    type INTEGER NOT NULL, \n    PRIMARY KEY(node_id), \n    FOREIGN KEY(node_id) REFERENCES node(id) ON DELETE CASCADE\n)\n</code></pre> <p>The table 'component_access' allow to add information on the type of visibility of element in the 'node' table. For example, a java class that is set to public will have an entry in this table.</p> <p>Create a new ComponentAccess object.</p> <p>Parameters:</p> Name Type Description Default <code>node_id</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>type_</code> <code>ComponentAccessType</code> <p>The type of the ComponentAccess</p> <code>NONE</code>"},{"location":"intern_dev/numbat/types/#numbat.types.Error","title":"Error","text":"<pre><code>Error(id_=0, message='', fatal=0, indexed=0, translation_unit='')\n</code></pre> <p>Wrapper class for sourcetrail error table:</p> <pre><code>CREATE TABLE error(\n    id INTEGER NOT NULL, \n    message TEXT, \n    fatal INTEGER NOT NULL, \n    indexed INTEGER NOT NULL, \n    translation_unit TEXT, \n    PRIMARY KEY(id), \n    FOREIGN KEY(id) REFERENCES element(id) ON DELETE CASCADE\n)\n</code></pre> <p>The table 'error' holds the different error message produced during the parsing of the source files and are displayed in the UI.</p> <p>Create a new Error object.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>int</code> <p>The id of the element</p> <code>0</code> <code>message</code> <code>str</code> <p>The description of the error</p> <code>''</code> <code>fatal</code> <code>int</code> <p>Indicate if this error is fatal or not (0 or 1)</p> <code>0</code> <code>indexed</code> <code>int</code> <p>Indicate if this error occurs while indexing (0 or 1)</p> <code>0</code> <code>translation_unit</code> <code>str</code> <p>Indicate in which translation unit the error occurs</p> <code>''</code>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement","title":"NameElement","text":"<pre><code>NameElement(prefix=None, name=None, postfix=None)\n</code></pre> <p>This class is a basic component of the serialized_name field of the node table. This type does not represent directly a  type in the database.</p> <p>Create a new NameElement object.</p> <p>Parameters:</p> Name Type Description Default <code>prefix</code> <code>str</code> <p>The prefix of the element</p> <code>None</code> <code>name</code> <code>str</code> <p>The name of the element</p> <code>None</code> <code>postfix</code> <code>str</code> <p>The postfix of the element</p> <code>None</code>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement.get_prefix","title":"get_prefix","text":"<pre><code>get_prefix()\n</code></pre> <p>Return the prefix of this element</p> <p>Returns:</p> Type Description <code>str</code> <p>The prefix of the element</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement.get_name","title":"get_name","text":"<pre><code>get_name()\n</code></pre> <p>Return the name of this element</p> <p>Returns:</p> Type Description <code>str</code> <p>The name of the element</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement.get_postfix","title":"get_postfix","text":"<pre><code>get_postfix()\n</code></pre> <p>Return the postfix of this element</p> <p>Returns:</p> Type Description <code>str</code> <p>The postfix of the element</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement.set_prefix","title":"set_prefix","text":"<pre><code>set_prefix(prefix)\n</code></pre> <p>Set the prefix of this element</p> <p>Parameters:</p> Name Type Description Default <code>prefix</code> <code>str</code> <p>The new prefix of the element</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement.set_name","title":"set_name","text":"<pre><code>set_name(name)\n</code></pre> <p>Set the name of this element</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The new name of the element</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameElement.set_postfix","title":"set_postfix","text":"<pre><code>set_postfix(postfix)\n</code></pre> <p>Set the postfix of this element</p> <p>Parameters:</p> Name Type Description Default <code>postfix</code> <code>str</code> <p>The new postfix of the element</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameHierarchy","title":"NameHierarchy","text":"<pre><code>NameHierarchy(delimiter, elements)\n</code></pre> <p>This class represent the hierarchy relationship between nodes.  This type does not represent directly a type in the database and is stored in the 'serialized_name' field of the 'node' table.</p> <p>Create a new NameHierarchy object</p> <p>Parameters:</p> Name Type Description Default <code>delimiter</code> <code>str</code> <p>The delimiter of for this NameHierarchy, must be one of the NAME_DELIMITERS</p> required <code>elements</code> <code>list[NameElement]</code> <p>A list of NameElement representing the hierarchy of this element</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameHierarchy.extend","title":"extend","text":"<pre><code>extend(element)\n</code></pre> <p>Utility method that adds a new element to a hierarchy</p> <p>Parameters:</p> Name Type Description Default <code>element</code> <code>NameElement</code> <p>The new element to add</p> required"},{"location":"intern_dev/numbat/types/#numbat.types.NameHierarchy.serialize_range","title":"serialize_range","text":"<pre><code>serialize_range(start, end)\n</code></pre> <p>Utility method that return a part of the serialized name</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>int</code> <p>the starting position of the elements</p> required <code>end</code> <code>int</code> <p>the ending position of the elements</p> required <p>Returns:</p> Type Description <code>str</code> <p>The serialized name</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameHierarchy.serialize_name","title":"serialize_name","text":"<pre><code>serialize_name()\n</code></pre> <p>Utility method that return the full serialized name</p> <p>Returns:</p> Type Description <code>str</code> <p>The serialized name</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameHierarchy.size","title":"size","text":"<pre><code>size()\n</code></pre> <p>Return the size of the NameHierarchy object.</p> <p>Returns:</p> Type Description <code>int</code> <p>The size of the NameHierarchy</p>"},{"location":"intern_dev/numbat/types/#numbat.types.NameHierarchy.deserialize_name","title":"deserialize_name  <code>staticmethod</code>","text":"<pre><code>deserialize_name(serialized_name)\n</code></pre> <p>Utility method that return prefix, name and suffix  from a serialized name</p> <p>Parameters:</p> Name Type Description Default <code>serialized_name</code> <code>str</code> <p>A string that should start by one of the following: - NAME_DELIMITER_FILE - NAME_DELIMITER_CXX - NAME_DELIMITER_JAVA - NAME_DELIMITER_UNKNOWN And then be followed by at least 3 elements separated by the delimiter \"DELIMITER\".</p> required <p>Returns:</p> Type Description <code>NameHierarchy</code> <p>The NameHierarchy corresponding to the deserialize_name</p>"}]}